{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\master\\\\MERN\\\\frontend\\\\src\\\\components\\\\Users\\\\UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const getAllUsers = async () => {\n    const res = await axios.get(\"http://localhost:5000/users\");\n    console.log(res);\n    setUsers(res.data); // console.log(response.data)\n  };\n\n  const deleteUser = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/users/${id}`);\n      getAllUsers();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  /*  Await Syntax\r\n   The await keyword can only be used inside an async function.\r\n   The await keyword makes the function pause the execution and wait for a resolved promise before it continues\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns mt-5 is-centered\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column is-half\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `add`,\n        className: \"button is-success\",\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table is-striped is-fullwidth\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          class: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `edit/${user.id}`,\n                className: \"button is-small is-info mr-2\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteUser(user.id),\n                className: \"button is-small is-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = UserList;\nexport default UserList; /// useState // example //\n\n/*import React, { useState } from 'react';\r\n\r\nfunction Example() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nuseState is React Hook that allows you to add state to a functional component. \r\nIt returns an array with two values: the current state and a function to update it. \r\nThe Hook takes an initial state value as an argument and returns an updated state value whenever the setter function is called.\r\n\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/master/MERN/frontend/src/components/Users/UserList.js"],"names":["React","useState","useEffect","axios","Link","UserList","users","setUsers","getAllUsers","res","get","console","log","data","deleteUser","id","delete","error","map","user","index","name","age","email","gender"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n\r\n  const getAllUsers = async () => {\r\n    const res = await axios.get(\"http://localhost:5000/users\");\r\n\r\n    console.log(res)\r\n    setUsers(res.data);\r\n\r\n    // console.log(response.data)\r\n    \r\n  };\r\n\r\n  \r\n\r\n\r\n\r\n  const deleteUser = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/users/${id}`);\r\n      getAllUsers();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n/*  Await Syntax\r\n The await keyword can only be used inside an async function.\r\n The await keyword makes the function pause the execution and wait for a resolved promise before it continues\r\n */\r\n  \r\n\r\n  return (\r\n\r\n\r\n    \r\n    \r\n    <div className=\"columns mt-5 is-centered\">\r\n      <div className=\"column is-half\">\r\n        <Link to={`add`} className=\"button is-success\">\r\n          Add New User\r\n        </Link>\r\n        \r\n        <table className=\"table is-striped is-fullwidth\">\r\n          <thead class=\"thead-dark\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Age</th>\r\n              <th>Email</th>\r\n              <th>Gender</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user, index) => (\r\n              <tr key={user.id}>\r\n                <td>{user.name}</td>\r\n                <td>{user.age}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.gender}</td>\r\n                <td>\r\n                  <Link\r\n                    to={`edit/${user.id}`}\r\n                    className=\"button is-small is-info mr-2\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                  <button\r\n                    onClick={() => deleteUser(user.id)}\r\n                    className=\"button is-small is-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n\r\n\r\n\r\n/// useState // example //\r\n/*import React, { useState } from 'react';\r\n\r\nfunction Example() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nuseState is React Hook that allows you to add state to a functional component. \r\nIt returns an array with two values: the current state and a function to update it. \r\nThe Hook takes an initial state value as an argument and returns an updated state value whenever the setter function is called.\r\n\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}